#一些常用的常量
#treesitter下载的包中语言"tree-sitter-cpp"中"cpp"到treesitter的parser识别语言的转换
dict_package2ts={
'java': 'java',
 'python': 'python',
 'cpp': 'cpp',
 'c-sharp': 'c_sharp',
 'javascript': 'javascript',
 'go': 'go',
 'php': 'php',
 'typescript': 'tsx',
 'css': 'css',
 'prolog': 'prolog',
 'r': 'r',
 'rust': 'rust',
 'c': 'c',
 'cuda': 'cuda',
 'perl': 'perl',
 'scala': 'scala',
 'matlab': 'matlab',
 'pascal': 'pascal',
 'ruby': 'ruby',
 'lua': 'lua',
 'dart': 'dart',
 'kotlin': 'kotlin',
 'html': 'html',
 'elisp': 'elisp',
 'latex': 'latex',
 'sqlite': 'sqlite',
 'objc': 'objc',
 'fortran': 'fortran'}
 #codegeex识别的语言标签到treesitter识别标签的转换
dict_codegeex2ts={
 'c': 'c',
 'c++': 'cpp',
 'cpp': 'cpp',
 'c#': 'c_sharp',
 'csharp': 'c_sharp',
 'css': 'css',
 'cuda': 'cuda',
 'dart': 'dart',
 'lua': 'lua',
 'objectivec': 'objc',
 'objective-c': 'objc',
 'python': 'python',
 'perl': 'perl',
 'prolog': 'prolog',
 'lisp': 'elisp',
 'java': 'java',
 'scala': 'scala',
 'tex': 'latex',
 'html': 'html',
 'php': 'php',
 'js': 'javascript',
 'javascript': 'javascript',
 'typescript': 'tsx',
 'go': 'go',
 'rust': 'rust',
 'sql': 'sqlite',
 'kotlin': 'kotlin',
 'ruby': 'ruby',
 'pascal': 'pascal',
 'r': 'r',
 'fortran': 'fortran',
 'matlab': 'matlab'}

#分割代码时根据文本内容和生成的ast进行分析，找到需要提取的节点名称。由于不同语言有差异，故建立字典
#该字典为不同语言的主体节点
dict_codebody={'c': ['function_definition', 'struct_specifier'],
 'cpp': ['function_definition', 'namespace_definition', 'class_specifier', 'template_declaration', 'struct_specifier'], 
 'c_sharp': ['namespace_definition', 'class_declaration', 'interface_declaration', 'struct_declaration'], 
 'go': ['type_declaration', ' method_declaration', 'function_declaration'], 
 'java': ['class_declaration', 'interface_declaration'], 
 'php': ['class_declaration', 'expression_statement', 'interface_declaration', 'function_definition'], 
 'python': ['function_definition', 'class_definition'], 'ruby': ['class', 'module', 'method'],
  'rust': ['trait_item', 'struct_item', 'impl_item', 'enum_item', 'function_item', 'type_item', 'mod_item'],
   'tsx': ['lexical_declaration', 'export_statement', 'expression_statement', 'function_declaration', 'class_declaration', 'interface_declaration'], 
   'fortran': ['module', 'subroutine', 'function', 'submodule', 'program'], 
   'kotlin': ['call_expression', 'function_declaration', 'prefix_expression', 'class_declaration', 'object_declaration', ''], 
   'cuda': ['function_definition', 'template_declaration', 'namespace_definition', 'struct_specifier', 'class_specifier', 'type_definition'], 
   'scala': ['class_definition', 'object_definition', 'function_definition', 'trait_definition']}

#该字典为不同语言主体的前缀，需要在body的前面作为提示信息
dict_codehint={'c': ['comment', ' type_definition', 'declaration'], 
'cpp': ['comment', 'type_definition', 'declaration'], 'c_sharp': ['comment', 'global_statement'], 
'go': ['comment', 'var_declaration'], 'java': ['block_comment', 'line_comment'], 
'php': ['php_tag', 'namespace_definition', 'namespace_use_declaration', 'comment'],
 'python': ['comment', 'expression_statement-string'], 'ruby': ['comment'], 
 'rust': ['line_comment', 'block_comment'], 'tsx': ['comment'], 'fortran': ['comment'], 
 'kotlin': ['comment'], 'cuda': ['comment'], 'scala': ['comment']}